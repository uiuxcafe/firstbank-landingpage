{"version":3,"sources":["../../src/index.ts","../../src/useTypewriter.ts","../../src/typeWriter.ts","components/Option/OptionText.tsx"],"names":["_a","intervalRef","react_1","useRef","strRef","TextGroup","styled","Styles","OptionTextWrapper","Card","OptionTextCard","Img","OptionTextImg","TextArea","OptionTextTextArea","Colors","TitleBlack","Metrics","tablet","Text","Fonts","optionText","OptionText","props","useState","text","setText","typing","useTypewriter","useEffect","src","portrait"],"mappings":"sJAAA,aAEA,UAAe,W,qECFf,WAGM,EAAU,IAFhB,OAEoB,SAEpB,mBAAuC,GAC/B,IAAAA,EAAA,iBAAC,OAAM,OACPC,EAAcC,EAAQC,OAAI,IAC1BC,EAASF,EAAQC,OAAI,IAe3B,OAbA,aAAU,WACR,EAAO,QAAU,WAAQ,KAAQ,IAAkB,cAAC,UACnD,CAAC,IAEJ,aAAU,WAIR,OAHA,EAAY,QAAU,aAAY,WAChC,EAAQ,EAAQ,YACf,EAAQ,MACJ,WACL,cAAc,EAAY,YAE3B,CAAC,IAEG,I,mECvBT,iBASE,aAEE,KAAK,WAAa,GAClB,KAAK,WAAa,G,OAIb,8BAAP,WAKC,OAJC,KAAK,WAAW,GAChB,KAAK,SAAU,KAAG,SAClB,KAAK,WAAU,KAAK,oCACpB,cAAS,EACV,IAaC,8B,OAEE,eAAY,UACb,yBAGC,cAAY,KAAO,KACpB,aAGC,YAAY,KAAI,SACjB,WAGD,WAAK,KACL,IAAI,EAAK,KAAG,WAAK,QACjB,gBAAgB,QACjB,oCAED,KAEO,YAEL,EAAK,UAAY,cAAgB,SAAG,GAOpC,OANA,gBAAgB,GACjB,gBAEM,cAAP,EACE,KAAK,WAAW,MAChB,KAAK,KAAO,KAAK,WAAW,KAAK,IACzB,KAAI,MAGP,YAAP,iBAGI,OAFF,KAAO,WAAQ,GACf,UAAW,KAAG,WAAY,SACtB,KAAK,MAEX,EAAC,wBAEH,oBAAC,mB,mBA1ED,G,q+BCOA,IAAME,EAAYC,YAAOC,IAAOC,oBAAdF,CAAH,KAETG,EAAOH,YAAOC,IAAOG,iBAAdJ,CAAH,KAEJK,EAAML,YAAOC,IAAOK,gBAAdN,CAAH,KAGHO,EAAWP,YAAOC,IAAOO,qBAAdR,CAAH,IAKGS,IAAOC,WAQCC,IAAQC,QAU3BC,EAAOb,YAAOc,IAAMC,aAAbf,CAAH,KAyBKgB,UArBI,SAACC,GAAwB,IAAD,EACbC,mBAAS,IADI,mBAC/BC,EAD+B,KACzBC,EADyB,KAEjCC,EAASC,IAAcH,GAM7B,OAJAI,qBAAU,WACNH,EAAQ,GAAD,cAAIH,QAAJ,IAAIA,OAAJ,EAAIA,EAAOE,UAIlB,kBAACpB,EAAD,KACI,kBAACI,EAAD,KACI,kBAACE,EAAD,CAAKmB,IAAG,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAOQ,WACjB,kBAAClB,EAAD,KACI,kBAACM,EAAD,KAAOQ","file":"static/js/0.da2503f5.chunk.js","sourcesContent":["\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar useTypewriter_1 = require(\"./useTypewriter\");\nexports.default = useTypewriter_1.default;\n//# sourceMappingURL=index.js.map    ","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar typeWriter_1 = require(\"./typeWriter\");\nvar writter = new typeWriter_1.default();\nfunction useTypeWritter(str) {\n    var _a = react_1.useState(null), word = _a[0], setWord = _a[1];\n    var intervalRef = react_1.useRef({});\n    var strRef = react_1.useRef({});\n    react_1.useEffect(function () {\n        strRef.current = setTimeout(() => {setWord(writter.startTypeWord(str));}, 0)\n    }, [str]);\n    react_1.useEffect(function () {\n        intervalRef.current = setInterval(function () {\n            setWord(writter.typing());\n        }, writter.rd());\n        return function clear() {\n            clearInterval(intervalRef.current);\n        };\n    }, [word]);\n    return word;\n}\nexports.default = useTypeWritter;\n//# sourceMappingURL=useTypewriter.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TypeWritter = /** @class */ (function () {\n    function TypeWritter() {\n        this.dummyQueue = [];\n        this.eventQueue = [];\n        // this.initTaskQueue()\n    }\n    TypeWritter.prototype.restartTypeWriter = function () {\n        this.dummyQueue = [];\n        this.memoWord = this.nextWord;\n        this.eventQueue = this.nextWord ? this.nextWord.split('') : [];\n        this.erasing = false;\n        return '';\n    };\n    /**\n     * Main process function\n     * typing\n     *    |-- writing\n     *    |-- erasing\n     *    |-- restartWrite\n     *\n     * @returns\n     * @memberof TypeWritter\n     */\n    TypeWritter.prototype.typing = function () {\n        // earsing to last character, start write next word\n        if (this.erasing && !this.word) {\n            return this.restartTypeWriter();\n        }\n        // earsing\n        if (this.erasing && this.word) {\n            return this.erase();\n        }\n        // write end\n        if (this.word === this.memoWord) {\n            return this.word;\n        }\n        // writing\n        setTimeout(() => {\n        var el = this.eventQueue.shift();\n        this.dummyQueue.push(el);\n        this.word = this.dummyQueue.join('');\n        ;}, 500)\n        \n        return this.word;\n    };\n    TypeWritter.prototype.startTypeWord = function (str) {\n        this.dummyQueue = [];\n        this.erasing = true;\n        this.nextWord = str;\n        this.dummyQueue.pop();\n        this.word = this.dummyQueue.join('');\n        return this.word;\n    };\n    TypeWritter.prototype.erase = function () {\n        this.dummyQueue = [];\n        this.word = this.dummyQueue.join('');\n        return this.word;\n    };\n    TypeWritter.prototype.rd = function () {\n        var r = Math.random();\n        return r > 0.1 || r < 0.07\n            ? this.rd()\n            : r * 1000;\n    };\n    return TypeWritter;\n}());\nexports.default = TypeWritter;\n//# sourceMappingURL=typeWriter.js.map","/* eslint-disable import/first */\nimport React, {useState, useEffect} from 'react'\nimport styled from 'styled-components'\nimport { IOptionText } from '../../types/index';\nimport { Colors, Metrics, Fonts, Styles } from '../../Themes'\nimport useTypewriter from \"../../hook/react-typewriter-hook\"\n\nconst TextGroup = styled(Styles.OptionTextWrapper())`\n`\nconst Card = styled(Styles.OptionTextCard())`\n`\nconst Img = styled(Styles.OptionTextImg())`\n    padding: 40px 32px;\n`\nconst TextArea = styled(Styles.OptionTextTextArea())`\n    width: auto;\n    overflow: inherit;\n    .Text{\n        -ms-overflow-style: none;\n        color: ${Colors.TitleBlack};\n        font-size: 24px;\n        letter-spacing: 1px;\n        line-height: 32px;\n        margin: 0;\n        text-align: left;\n        margin-left: 15px;\n    }\n    @media (max-width: ${Metrics.tablet}){\n        .Text{\n            font-size: 16px;\n            letter-spacing: 1px;\n            line-height: 24px;\n            margin-left: inherit;\n            width: 100%\n        }\n    }\n`\nconst Text = styled(Fonts.optionText())`\n\n`\n\nconst OptionText = (props: IOptionText) => {\n    const [ text, setText ] = useState('')\n    const typing = useTypewriter(text)\n\n    useEffect(() => {\n        setText(`${props?.text}`);\n    })\n      \n    return (\n        <TextGroup>\n            <Card>\n                <Img src={props?.portrait} />\n                <TextArea>\n                    <Text>{typing}</Text>\n                </TextArea>\n            </Card>\n        </TextGroup>\n    )\n}\n\n\nexport default OptionText\n"],"sourceRoot":""}